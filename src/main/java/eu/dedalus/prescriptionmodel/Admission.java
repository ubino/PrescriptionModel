package eu.dedalus.prescriptionmodel;

import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;
import eu.dedalus.prescriptionmodel.Exemption;
import eu.dedalus.prescriptionmodel.Diagnosis;
import eu.dedalus.prescriptionmodel.CommonData;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class Admission
		implements
			java.io.Serializable,
			Cloneable,
			CommonDataInterface {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("Definizione dati comuni")
	private CommonData commonData = new CommonData();

	@org.kie.api.definition.type.Label(value = "Descrizione del ricovero")
	private String description;

	@org.kie.api.definition.type.Label(value = "Codice del ricovero")
	private String code;

	@org.kie.api.definition.type.Label(value = "Livello di urgenza")
	private String urgency;

	public Admission() {
	}

	@Override
	public Admission clone() throws CloneNotSupportedException {
		// Define a shallow copy for Drug element
		Admission a = (Admission) super.clone();
		a.setCommonData(commonData.clone());
		return a;
	}

	public void setCommonData(CommonData data) {
		this.commonData = data;
	}

	// CommoData decorator

	public String getId() {
		return this.commonData.getId();
	}

	public void setId(String id) {
		this.commonData.setId(id);
	}

	public String getType() {
		return "admission";
	}

	public void setType(String type) {
		this.commonData.setType(type);
	}

	public String getInductor() {
		return this.commonData.getInductor();
	}

	public void setInductor(String inductor) {
		this.commonData.setInductor(inductor);
	}

	public boolean isDemat() {
		return this.commonData.isDemat();
	}

	public void setDemat(boolean demat) {
		this.commonData.setDemat(demat);
	}

	public List<Exemption> getAvailableExemptions() {
		return this.commonData.getAvailableExemptions();
	}

	public void setAvailableExemptions(List<Exemption> availableExemptions) {
		this.commonData.setAvailableExemptions(availableExemptions);
	}

	public Exemption getExemption() {
		return this.commonData.getExemption();
	}

	public void setExemption(Exemption exemption) {
		this.commonData.setExemption(exemption);
	}

	public Map<String, Boolean> getCheckFlags() {
		return this.commonData.getCheckFlags();
	}

	public void setCheckFlags(Map<String, Boolean> checkFlags) {
		this.commonData.setCheckFlags(checkFlags);
	}

	public void addCheckFlags(String key, Boolean value) {
		this.commonData.addCheckFlags(key, value);
	}

	public List<Notification> getErrors() {
		return this.commonData.getErrors();
	}

	public void setErrors(List<Notification> errors) {
		this.commonData.setErrors(errors);
	}

	public List<Notification> getWarnings() {
		return this.commonData.getWarnings();
	}

	public void setWarnings(List<Notification> warnings) {
		this.commonData.setWarnings(warnings);
	}

	public void addAvailableExemptions(String code, String type) {
		this.commonData.addAvailableExemptions(code, type);
	}

	public boolean isGranted() {
		return this.commonData.isGranted();
	}

	public void setGranted(boolean granted) {
		this.commonData.setGranted(granted);
	}

	public List<Notification> getInformations() {
		return this.commonData.getInformations();
	}

	public void setInformations(List<Notification> informations) {
		this.commonData.setInformations(informations);
	}

	public String getOverTheCounterReason() {
		return this.commonData.getOverTheCounterReason();
	}

	public void setOverTheCounterReason(String overTheCounterReason) {
		this.commonData.setOverTheCounterReason(overTheCounterReason);
	}

	public List<Diagnosis> getDiagnosis() {
		return this.commonData.getDiagnosis();
	}

	public void setDiagnosis(List<Diagnosis> diagnosis) {
		this.commonData.setDiagnosis(diagnosis);
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getUrgency() {
		return this.urgency;
	}

	public void setUrgency(String urgency) {
		this.urgency = urgency;
	}

	public Admission(CommonData commonData,
			String description, String code, String urgency) {
		this.commonData = commonData;
		this.description = description;
		this.code = code;
		this.urgency = urgency;
	}
}