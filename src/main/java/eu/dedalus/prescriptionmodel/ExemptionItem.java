package eu.dedalus.prescriptionmodel;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class ExemptionItem implements java.io.Serializable, Cloneable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("the code of drug or procedure")
	private java.lang.String code;
	@org.kie.api.definition.type.Label("the code is regional or national")
	private boolean regionalCode = false;
	@org.kie.api.definition.type.Label("the item have limitation")
	private boolean withRestriction = false;
	@org.kie.api.definition.type.Label("prescription on problem flag")
	private boolean onProblem = false;

	@org.kie.api.definition.type.Label("description of restriction")
	private java.lang.String restriction = null;

	public ExemptionItem() {
	}

	public java.lang.String getCode() {
		return this.code;
	}

	public void setCode(java.lang.String code) {
		this.code = code;
	}

	public boolean isRegionalCode() {
		return this.regionalCode;
	}

	public void setRegionalCode(boolean regionalCode) {
		this.regionalCode = regionalCode;
	}

	public boolean isWithRestriction() {
		return this.withRestriction;
	}

	public void setWithRestriction(boolean withRestriction) {
		this.withRestriction = withRestriction;
	}

	public boolean isOnProblem() {
		return this.onProblem;
	}

	public void setOnProblem(boolean onProblem) {
		this.onProblem = onProblem;
	}

	public java.lang.String getRestriction() {
		return this.restriction;
	}

	public void setRestriction(java.lang.String restriction) {
		this.restriction = restriction;
	}

	public ExemptionItem clone() throws CloneNotSupportedException {
		return (ExemptionItem) super.clone();
	}

	public ExemptionItem(java.lang.String code, boolean regionalCode,
			boolean withRestriction, boolean onProblem,
			java.lang.String restriction) {
		this.code = code;
		this.regionalCode = regionalCode;
		this.withRestriction = withRestriction;
		this.onProblem = onProblem;
		this.restriction = restriction;
	}
}